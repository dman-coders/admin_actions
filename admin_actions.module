<?php

/**
 * @file
 * Code for the admin_actions feature.
 */

include_once 'admin_actions.features.inc';

/**
 * Intercept a VBO form and auto-select its row.
 *
 * We are taking what used to be a VBO table, with its embedded checkboxes,
 * automatically selecting the one checkbox, and then choosing not to show the
 * table at all - but do show the VBO buttons.
 *
 * Now you can just press the button and the thing will happen
 * to the current entity
 *
 * Implements hook_form_alter().
 *
 * @inheritdoc
 */
function admin_actions_form_views_form_alter(&$form, &$form_state) {
  // Is it our form?
  /** @var view $view */
  $view = $form_state['build_info']['args'][0];
  if ($view->name == 'admin_actions') {
    // Preselect the current (only) node.
    if (!empty($form['views_bulk_operations'])) {
      foreach (element_children($form['views_bulk_operations']) as $row_id) {
        $form['views_bulk_operations'][$row_id]['#value'] = $form['views_bulk_operations'][$row_id]['#return_value'];
        $form['views_bulk_operations'][$row_id]['#type'] = 'hidden';
      }
    }

    // Also need to nullify the table it was going to render.
    // This is a bit hokey, but should intercept the replacement that happens
    // later.
    // Normally I'd intercept the #theme, but it doesn't seem to be what
    // VBO is doing. Views (not VBO) is doing magic to 'output' at some stage.
    // views_form_views_form()
    //
    // These tokens are what VBO is using.
    // Seems to be   "<!--form-item-views_bulk_operations--0-->";
    // But I'll let the system tell me exactly, in case it changes.
    $stripped_markup = '';
    if (isset($form['#substitutions'])) {
      foreach ($form['#substitutions']['#value'] as $sub) {
        $stripped_markup .= $sub['placeholder'];
      }
    }
    $form['output']['#markup'] = $stripped_markup;
  }

}
